{"version":3,"sources":["../../src/ts/abis/IVotingMachineDataHelper.ts"],"sourcesContent":["// AUTOGENERATED - MANUALLY CHANGES WILL BE REVERTED BY THE GENERATOR\nexport const IVotingMachineDataHelper_ABI = [\n  {\n    type: 'function',\n    name: 'getProposalsData',\n    inputs: [\n      {\n        name: 'votingMachine',\n        type: 'address',\n        internalType: 'contract IVotingMachineWithProofs',\n      },\n      {\n        name: 'initialProposals',\n        type: 'tuple[]',\n        internalType: 'struct IVotingMachineDataHelper.InitialProposal[]',\n        components: [\n          {\n            name: 'id',\n            type: 'uint256',\n            internalType: 'uint256',\n          },\n          {\n            name: 'snapshotBlockHash',\n            type: 'bytes32',\n            internalType: 'bytes32',\n          },\n        ],\n      },\n      {\n        name: 'user',\n        type: 'address',\n        internalType: 'address',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'tuple[]',\n        internalType: 'struct IVotingMachineDataHelper.Proposal[]',\n        components: [\n          {\n            name: 'proposalData',\n            type: 'tuple',\n            internalType: 'struct IVotingMachineWithProofs.ProposalWithoutVotes',\n            components: [\n              {\n                name: 'id',\n                type: 'uint256',\n                internalType: 'uint256',\n              },\n              {\n                name: 'sentToGovernance',\n                type: 'bool',\n                internalType: 'bool',\n              },\n              {\n                name: 'startTime',\n                type: 'uint40',\n                internalType: 'uint40',\n              },\n              {\n                name: 'endTime',\n                type: 'uint40',\n                internalType: 'uint40',\n              },\n              {\n                name: 'votingClosedAndSentTimestamp',\n                type: 'uint40',\n                internalType: 'uint40',\n              },\n              {\n                name: 'forVotes',\n                type: 'uint128',\n                internalType: 'uint128',\n              },\n              {\n                name: 'againstVotes',\n                type: 'uint128',\n                internalType: 'uint128',\n              },\n              {\n                name: 'creationBlockNumber',\n                type: 'uint256',\n                internalType: 'uint256',\n              },\n              {\n                name: 'votingClosedAndSentBlockNumber',\n                type: 'uint256',\n                internalType: 'uint256',\n              },\n            ],\n          },\n          {\n            name: 'votedInfo',\n            type: 'tuple',\n            internalType: 'struct IVotingMachineDataHelper.VotedInfo',\n            components: [\n              {\n                name: 'support',\n                type: 'bool',\n                internalType: 'bool',\n              },\n              {\n                name: 'votingPower',\n                type: 'uint248',\n                internalType: 'uint248',\n              },\n            ],\n          },\n          {\n            name: 'strategy',\n            type: 'address',\n            internalType: 'contract IVotingStrategy',\n          },\n          {\n            name: 'dataWarehouse',\n            type: 'address',\n            internalType: 'contract IDataWarehouse',\n          },\n          {\n            name: 'votingAssets',\n            type: 'address[]',\n            internalType: 'address[]',\n          },\n          {\n            name: 'hasRequiredRoots',\n            type: 'bool',\n            internalType: 'bool',\n          },\n          {\n            name: 'voteConfig',\n            type: 'tuple',\n            internalType: 'struct IVotingMachineWithProofs.ProposalVoteConfiguration',\n            components: [\n              {\n                name: 'votingDuration',\n                type: 'uint24',\n                internalType: 'uint24',\n              },\n              {\n                name: 'l1ProposalBlockHash',\n                type: 'bytes32',\n                internalType: 'bytes32',\n              },\n            ],\n          },\n          {\n            name: 'state',\n            type: 'uint8',\n            internalType: 'enum IVotingMachineWithProofs.ProposalState',\n          },\n        ],\n      },\n    ],\n    stateMutability: 'view',\n  },\n] as const;\n"],"mappings":";AACO,IAAM,+BAA+B;AAAA,EAC1C;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,cAAc;AAAA,QACd,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,UAChB;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,UAChB;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,cAAc;AAAA,MAChB;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,cAAc;AAAA,QACd,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,YACd,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,YACd,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,UAChB;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,UAChB;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,UAChB;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,UAChB;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,YACd,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,cAAc;AAAA,UAChB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,EACnB;AACF;","names":[]}